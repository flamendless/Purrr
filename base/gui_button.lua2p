local vec2 = require("modules.hump.vector")
local utils = require("src.utils")

!if _LOGGING then
local log = require("modules.log.log")
!end

local base = require("base.gui")
local BaseGUIButton = base:extend()

function BaseGUIButton:new(id)
	BaseGUIButton.super.new(self, id or "?gui_button")
	self.__isGUIButton = true
	self.__isClicked = false
	self.__isHovered = false
	self.__onClick = nil
	self.__onHover = nil
	self.__img = nil
	self.__hover_img = nil
	!if _logging then
	log.info("created gui button: " .. self.__id)
	!end
end

function BaseGUIButton:setTexture(img)
	assert(img:type() == "Image", "arg1 must be an image")
	self.__img = img
	self.__orig_size = vec2(img:getWidth(), img:getHeight())
end

function BaseGUIButton:setTextureOnHover(img)
	assert(img:type() == "Image", "arg1 must be an image")
	self.__hover_img = img
end

function BaseGUIButton:setOnHover(fn)
	assert(type(fn) == "function", "arg1 must be a function")
	self.__onHover = fn
end

function BaseGUIButton:setOnClick(fn)
	assert(type(fn) == "function", "arg1 must be a function")
	self.__onClick = fn
end

function BaseGUIButton:draw()
	if self.__visible == false then return end

	local img = self.__img
	if self.__isHovered then
		img = self.__hover_img
	end
	local x = self.__pos.x
	local y = self.__pos.y
	local rot = self.__rot
	local sx = self.__scale.x
	local sy = self.__scale.y
	local ox = self.__offset.x
	local oy = self.__offset.y
	love.graphics.draw(img, x, y, rot, sx, sy, ox, oy)

	!if _DEBUG then
	BaseGUIButton.super.debugBounds(self)
	!end
end

return BaseGUIButton
